第3章 Python基础
3.1语句与语法
‘# 注释
\继续
:分隔代码块的头和体
;同一行书写
3.2变量赋值
在Python语言中，对象是通过引用传递的。在赋值时，不管这个对象是新创建的，还是一个已经存在的，都是将该对象的引用（并不是值）赋值给变量。
多元赋值 x,y,z = 1,2,'a string'
变量交换 x,y = y,x
3.3标识符
标识符是计算机语言中允许作为名字的有效字符串集合。关键字或者内建的标识符集合
__xxx 不用from module import *导入
__xxx__ 系统定义名字
_xxx 类中的私有变量名
3.4基本风格指南
’#/usr/bin/env python       (1)起始行
“this is a test module”     (2)模块文档（文档字符串）
import sys                  (3)模块导入
debug = True                (4)(全局)变量定义
class FooClass...           (5)类定义（若有）
def test()...               (6)函数定义（若有）
if __name__ == '__main__':  (7)主程序
如果模块是被导入，__name__值为模块名字，否则是__main__
通常只有主程序模块中有大量的顶级可执行代码，所有其他被导入的模块只应该有很少的顶级执行代码，所有的功能代码都应该封装在函数或类中。
PyUnit（unittest）测试框架
3.5内存管理
变量无需事先声明
变量无需指定类型
程序员不用关心内存管理
变量名会被回收
del语句能够直接释放资源
引用计数机制追踪内存中的对象，垃圾收集器负责释放内存。引用计数器+循环垃圾收集器
使用局部变量替换模块变量，提高变量查找速度
