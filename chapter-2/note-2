第2章 快速入门
2.1程序输出
print "hello world"
_:最后一个表达式的值
%d整数，%f浮点数，>>重定向
2.2程序输入和raw_input内建函数
raw_input()标准输入 help(raw_input)获取帮助信息
2.3注释   # 单行注释 “”文档注释
2.4操作符
/传统除法，//浮点除法（对结果四舍五入）**乘方 
2.5变量和赋值
变量名：大小写字母开头，下划线，数字，字母。大小写敏感
动态类型语言，不需要预先声明变量的类型，=。
2.6数字
五中基本数字类型
有符号整型（长整型、布尔值）、浮点值、复数
2.7字符串
+连接，*重复
2.8列表和元祖
列表和元祖可以看做是“普通”的数组，它能存储任意数量任意类型的Python对象。从0开始访问。
区别：列表使用[]，个数及值可以改变，元祖使用()，不可以更改。元祖可以看成是只读的列表。可以切片
2.9字典
字典是Python中的映射数据类型，键值对key-value对构成。用{}
2.10代码块及缩进对齐
2.11if语句
2.12while循环
2.13for循环和range()内建函数
print语句默认换行，（，）不换行加空格，enumerate()函数同时循环索引和元素
2.14列表解析
可以使用for循环把所有值放到一个列表中，或挑选符合要求的值
2.15文件和内建函数open()、file()
handle = open(file_name, access_mode='r')
r读取，w写入，a追加，+读写，b二进制访问，默认r
for eachLine in handle:好处是能够快速完整地访问文件，但需要注意文件大小
对于很大的文件，会占用太多的内存，最好一次读一行
2.16错误和异常
try-except
2.17函数
Python是通过引用调用的，这意味着函数内对参数的改变会影响到原始对象。不过只有可变对象会受此影响，不可变对象类似按值调用。
2.18类
类是面向对象编程的核心，它扮演相关数据及逻辑容器的角色。它们提供了创建真实对象（也就是实例）的蓝图。
当一个类实例被创建时，__init__()方法会自动执行，在类实例创建完毕后执行，类似构造器，但并不创建实例-它仅仅是你的对象创建后执行的第一个方法。目的是执行一些该对象
必要的初始化工作。self是类实例自身的引用，其它面向对象语言通常使用this标识符
2.19模块
模块是一种组织形式，它将彼此有关系的Python代码组织到一个个独立文件中。可以包含可执行代码、函数和类，或者组合。
模块创建后，可以从另一个模块中import导入这个模块
2.20实用的函数
dir() help() int() len() open(fn,mode) range([start,]stop[,step]) raw_input() str() type()


