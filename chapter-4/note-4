第4章 Python对象
4.1Python对象
Python使用对象模型来存储数据。构造任意类型的值都是一个对象。
所有python对象都拥有三个特征：身份、类型和值
身份：唯一的身份标识自己，可使用内建函数id()来得到。这个值可以被认为是该对象的内存地址，但很少用
类型：type()查看，返回的是对象而不是简单的字符串
值：对象表示的数据项
除值以外，其它都是只读的
某些python对象有属性、值或相关联的可执行代码，比如方法。.访问，最常用的属性是函数和方法。含有数据属性的对象包括（但不限于）
类、类实例、模块、复数和文件
4.2标准类型
数字、整型、布尔型、长整型、浮点型、复数型、字符串、列表、元祖、字典 也称作基本数据类型
4.3其它内建类型
类型、Null对象（None）、文件、集合/固定集合、函数/方法、模块、类
所有类型对象的类型都是type,它也是所有python类型的根和所有python标准类的默认元类（metaclass）
类就是类型，实例是对应类型的对象
4.4内部类型
代码、帧、跟踪记录、切片、省略、Xrange
4.4.1代码对象
代码对象是编译过的Python源代码片段，他是可执行对象。通过内建函数compile()可以得到，代码对象可以被exec命令或eval()内建函数来执行。
代码对象本身不包含任何执行环境信息，它是用户自定义函数的核心，在被执行时动态获得上下文。
4.4.2帧对象
帧对象表示python的执行栈帧。
4.4.3跟踪记录对象
当你的代码出错时，python就会引发一个异常。如果异常未被捕获或处理，解释器就会推出脚本运行。当异常发生时，一个包含针对异常的栈跟踪信息的跟踪记录对象被创建。
如果一个异常有自己的处理程序，处理程序就可以访问这个跟踪记录对象。
4.4.4切片对象
foolist[::-1]实现反转功能
4.4.5省略对象
省略对象用于扩展切片语法中，起记号作用。这个对象在切片语法中表示省略号。类似Null对象None,省略对象有一个唯一的名字Ellipsis,它的布尔值始终是True
4.4.6XRange对象
xrange()用于需要节省内存使用或range()无法完成的超大数据集场合。
4.5标准类型操作符
值比较
对象身份比较：对象可以被赋值个一个变量（通过引用）。因为每个对象都指向同一个（共享的）数据对象，只要任何一个引用发生改变，该对象的其它引用也随之改变。
每个对象都天生有一个计数器，记录它自己的引用次数。这个数目表示有多少个变量指向该对象。python提供了is和is not操作符来测试两个变量是否指向同一个对象
a is b 等价于 id(a) == id(b)
a is not b
布尔类型：and or not
4.6标准类型内建函数
type()
cmp()
str()得到的字符串可读性好
repr()可以用来重新获得该对象 obj==eval(repr(obj))
isinstance() if isinstance(num,int)... types模块包含所有的对象类型
4.7类型工厂函数
所有的内建类型现在也都是类，原来的所谓内建转换函数如int() type() list()等现在都成了工厂函数。也就是说虽然他们看上去像函数，实质上是类。
当你调用他们时，生成了该类型的一个实例。
4.8标准类型的分类
基本是指这些类型都是python提供的标准或核心类型
内建是由于这些类型是python默认提供的
数据是因为他们用于一般数据存储
对象是因为对象是数据和功能的默认抽象
原始是因为这些类型提供的是最底层的粒度数据存储
类型是因为他们就是数据类型
存储模型：存储对象的多少：原子或标量存储、容器存储、
更新模型：对象创建后能否更新：可变类型、不可变类型
访问模型：访问我们存储数据的方式：直接存取、顺序和映射




